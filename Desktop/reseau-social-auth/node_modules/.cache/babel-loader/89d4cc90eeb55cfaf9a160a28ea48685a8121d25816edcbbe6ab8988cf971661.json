{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nassi\\\\Desktop\\\\reseau-social-auth\\\\src\\\\components\\\\Auth\\\\FormAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport ButtonSubmit from \"../UI/ButtonSubmit\";\nimport Form from 'react-bootstrap/Form';\nimport ErrorModalOverlay from './ErrorModalOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormAuth = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [dataLogin, setDataLogin] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInput = useRef(null);\n  const passwordInput = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const emailValue = emailInput.current.value;\n    const passwordValue = passwordInput.current.value;\n    if (emailValue.length === 0) {\n      setError('L\\'email est pas remplie');\n      setShow(true);\n    } else if (passwordValue.length === 0) {\n      setError('Le password est pas remplie');\n      setShow(true);\n    } else {\n      setShow(false);\n      const urlToLogin = \"http://localhost:3000/login\";\n      const checkToLogin = async () => {\n        //try{\n        const responseLogin = await fetch(urlToLogin, {\n          method: 'POST',\n          body: JSON.stringify({\n            login: emailValue,\n            password: passwordValue\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const dataReponseJSON = await responseLogin.json();\n        setIsLoading(true);\n\n        //Pour gerer les erreurs il faut voir au niveau de la propriété ok\n        if (responseLogin.ok) {\n          setDataLogin(dataReponseJSON);\n          setShow(false);\n        } else {\n          setShow(true);\n          setError(dataReponseJSON.message);\n          throw Error(dataReponseJSON.message);\n        }\n\n        //     }catch(err){\n        //       console.log(err.message);\n        //     }\n        //   }\n\n        //   checkToLogin();\n      };\n    }\n  };\n\n  // const tokenLogin = dataLogin.token\n  console.log(dataLogin);\n  // console.log(tokenLogin)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [show && /*#__PURE__*/_jsxDEV(ErrorModalOverlay, {\n      value: error,\n      close: () => setShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center justify-content-center border w-50 m-auto p-3 mt-5 rounded\",\n      style: {\n        boxShadow: \"5px 5px 10px black\",\n        background: \"firebrick\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-light\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"w-75\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"text-light\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: emailInput,\n            type: \"email\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"text-light\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: passwordInput,\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSubmit, {\n          color: \"success\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: \"#f1f1f1\",\n          textAlign: \"center\",\n          marginTop: \"10px\"\n        },\n        children: \"En cours de chargement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FormAuth, \"Gc/CdKAMJyAxW3xyt2p+rNF5IqE=\");\n_c = FormAuth;\nexport default FormAuth;\nvar _c;\n$RefreshReg$(_c, \"FormAuth\");","map":{"version":3,"names":["React","useRef","useState","ButtonSubmit","Form","ErrorModalOverlay","jsxDEV","_jsxDEV","Fragment","_Fragment","FormAuth","_s","show","setShow","error","setError","dataLogin","setDataLogin","isLoading","setIsLoading","emailInput","passwordInput","handleSubmit","e","preventDefault","emailValue","current","value","passwordValue","length","urlToLogin","checkToLogin","responseLogin","fetch","method","body","JSON","stringify","login","password","headers","dataReponseJSON","json","ok","message","Error","console","log","children","close","fileName","_jsxFileName","lineNumber","columnNumber","className","style","boxShadow","background","onSubmit","Group","controlId","Label","Control","ref","type","placeholder","color","textAlign","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/nassi/Desktop/reseau-social-auth/src/components/Auth/FormAuth.js"],"sourcesContent":["import React,{useRef, useState} from 'react'\r\nimport ButtonSubmit from \"../UI/ButtonSubmit\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport ErrorModalOverlay from './ErrorModalOverlay';\r\n\r\nconst FormAuth = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [dataLogin, setDataLogin] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const emailInput = useRef(null);\r\n  const passwordInput = useRef(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const emailValue = emailInput.current.value;\r\n    const passwordValue = passwordInput.current.value;\r\n\r\n    if(emailValue.length === 0){\r\n      setError('L\\'email est pas remplie')\r\n      setShow(true)\r\n    }else if(passwordValue.length === 0){\r\n      setError('Le password est pas remplie')\r\n      setShow(true)\r\n    }else{\r\n      setShow(false)\r\n      const urlToLogin = \"http://localhost:3000/login\";\r\n      const checkToLogin = async() => {\r\n        //try{\r\n          const responseLogin = await fetch(urlToLogin, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              login: emailValue,\r\n              password: passwordValue\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          })\r\n          const dataReponseJSON = await responseLogin.json();\r\n          setIsLoading(true)\r\n          \r\n          //Pour gerer les erreurs il faut voir au niveau de la propriété ok\r\n          if(responseLogin.ok){\r\n            setDataLogin(dataReponseJSON)\r\n            setShow(false)\r\n          }else{\r\n            setShow(true)\r\n            setError(dataReponseJSON.message)\r\n            throw Error(dataReponseJSON.message)\r\n          }\r\n\r\n\r\n    //     }catch(err){\r\n    //       console.log(err.message);\r\n    //     }\r\n    //   }\r\n\r\n    //   checkToLogin();\r\n    }\r\n  }\r\n}\r\n  \r\n  // const tokenLogin = dataLogin.token\r\n  console.log(dataLogin)\r\n  // console.log(tokenLogin)\r\n  \r\n  return (\r\n    <>\r\n    {\r\n      show && <ErrorModalOverlay value={error} close={() => setShow(false)} />\r\n    }\r\n      <div className=\"d-flex flex-column align-items-center justify-content-center border w-50 m-auto p-3 mt-5 rounded\" style={{boxShadow:\"5px 5px 10px black\", background:\"firebrick\"}}>\r\n        <h1 className=\"text-light\">Se connecter</h1>\r\n\r\n        <Form className=\"w-75\" onSubmit={(e)=>handleSubmit(e)}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"text-light\">Email address</Form.Label>\r\n            <Form.Control ref={emailInput} type=\"email\" placeholder=\"Enter email\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"text-light\">Password</Form.Label>\r\n            <Form.Control ref={passwordInput} type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n\r\n          <ButtonSubmit color={\"success\"}>\r\n            Se connecter\r\n          </ButtonSubmit>\r\n        </Form>\r\n        {\r\n          isLoading &&\r\n          <h4 style={{color:\"#f1f1f1\", textAlign:\"center\", marginTop:\"10px\"}}>\r\n            En cours de chargement\r\n          </h4>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormAuth"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}