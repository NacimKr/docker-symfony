{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useRef, useState } from 'react';\nimport ButtonSubmit from \"../UI/ButtonSubmit\";\nimport Form from 'react-bootstrap/Form';\nimport ErrorModalOverlay from './ErrorModalOverlay';\nimport Loader from '../UI/Loader';\nimport { ContextAUTH } from '../../context/ContextAuth';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormAuth = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [dataLogin, setDataLogin] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n  const dataLoginContext = useContext(ContextAUTH);\n  const {\n    name,\n    isLogged,\n    token\n  } = dataLoginContext.data;\n  const {\n    logout\n  } = dataLoginContext;\n  const emailInput = useRef(null);\n  const passwordInput = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"je login\");\n    const emailValue = emailInput.current.value;\n    const passwordValue = passwordInput.current.value;\n    if (emailValue.length === 0) {\n      setError('L\\'email est pas remplie');\n      setShow(true);\n    } else if (passwordValue.length === 0) {\n      setError('Le password est pas remplie');\n      setShow(true);\n    } else {\n      const urlToLogin = `http://localhost:3000/${isLogin ? \"login\" : \"signUp\"}`;\n      console.log(urlToLogin);\n      const checkToLoginOrSignUp = async () => {\n        try {\n          const responseLogin = await fetch(urlToLogin, {\n            method: 'POST',\n            body: JSON.stringify({\n              login: emailValue,\n              password: passwordValue\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n            credentials: \"same-origin\"\n          });\n          const dataReponseJSON = await responseLogin.json();\n          setIsLoading(true);\n          console.log(responseLogin);\n\n          //Pour gerer les erreurs il faut voir au niveau de la propriété ok\n          if (responseLogin.ok) {\n            //Serveur a repondu donc le chargement est terminé\n            //setIsLoading(false)\n          } else {\n            setShow(true);\n            setIsLoading(false);\n            setError(dataReponseJSON === null || dataReponseJSON === void 0 ? void 0 : dataReponseJSON.message);\n            throw Error(dataReponseJSON === null || dataReponseJSON === void 0 ? void 0 : dataReponseJSON.message);\n          }\n        } catch (err) {\n          console.log(err.message);\n        }\n      };\n      checkToLoginOrSignUp();\n    }\n  };\n\n  // const tokenLogin = dataLogin.token\n  console.log(dataLogin);\n  // console.log(tokenLogin)\n\n  const toggleAuthHandler = () => {\n    setIsLogin(!isLogin);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"!\"\n  }, void 0, false);\n};\n_s(FormAuth, \"VkNi04iSeVTU3cMtVWgKZNr6uC8=\");\n_c = FormAuth;\nexport default FormAuth;\nvar _c;\n$RefreshReg$(_c, \"FormAuth\");","map":{"version":3,"names":["React","useContext","useRef","useState","ButtonSubmit","Form","ErrorModalOverlay","Loader","ContextAUTH","Fragment","_Fragment","jsxDEV","_jsxDEV","FormAuth","_s","show","setShow","error","setError","dataLogin","setDataLogin","isLoading","setIsLoading","isLogin","setIsLogin","dataLoginContext","name","isLogged","token","data","logout","emailInput","passwordInput","handleSubmit","e","preventDefault","console","log","emailValue","current","value","passwordValue","length","urlToLogin","checkToLoginOrSignUp","responseLogin","fetch","method","body","JSON","stringify","login","password","headers","redirect","referrerPolicy","credentials","dataReponseJSON","json","ok","message","Error","err","toggleAuthHandler","children","_c","$RefreshReg$"],"sources":["C:/Users/nassi/Desktop/reseau-social-auth/src/components/Auth/FormAuth.js"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react'\r\nimport ButtonSubmit from \"../UI/ButtonSubmit\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport ErrorModalOverlay from './ErrorModalOverlay';\r\nimport Loader from '../UI/Loader';\r\nimport { ContextAUTH } from '../../context/ContextAuth';\r\n\r\nconst FormAuth = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [dataLogin, setDataLogin] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const dataLoginContext = useContext(ContextAUTH);\r\n\r\n  const { name, isLogged, token } = dataLoginContext.data\r\n  const { logout } = dataLoginContext\r\n\r\n  const emailInput = useRef(null);\r\n  const passwordInput = useRef(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"je login\")\r\n    const emailValue = emailInput.current.value;\r\n    const passwordValue = passwordInput.current.value;\r\n\r\n    if (emailValue.length === 0) {\r\n      setError('L\\'email est pas remplie')\r\n      setShow(true)\r\n    } else if (passwordValue.length === 0) {\r\n      setError('Le password est pas remplie')\r\n      setShow(true)\r\n    } else {\r\n\r\n\r\n      const urlToLogin = `http://localhost:3000/${isLogin ? \"login\" : \"signUp\"}`\r\n      console.log(urlToLogin)\r\n      const checkToLoginOrSignUp = async () => {\r\n        try {\r\n          const responseLogin = await fetch(urlToLogin, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              login: emailValue,\r\n              password: passwordValue\r\n            }),\r\n            headers: { 'Content-Type': 'application/json' },\r\n            redirect: \"follow\",\r\n            referrerPolicy: \"no-referrer\",\r\n            credentials: \"same-origin\",\r\n          });\r\n          const dataReponseJSON = await responseLogin.json();\r\n          setIsLoading(true)\r\n          console.log(responseLogin)\r\n\r\n          //Pour gerer les erreurs il faut voir au niveau de la propriété ok\r\n          if (responseLogin.ok) {\r\n            //Serveur a repondu donc le chargement est terminé\r\n            //setIsLoading(false)\r\n          } else {\r\n            setShow(true)\r\n            setIsLoading(false)\r\n            setError(dataReponseJSON?.message)\r\n            throw Error(dataReponseJSON?.message)\r\n          }\r\n\r\n        } catch (err) {\r\n          console.log(err.message);\r\n        }\r\n      }\r\n      checkToLoginOrSignUp();\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  // const tokenLogin = dataLogin.token\r\n  console.log(dataLogin)\r\n  // console.log(tokenLogin)\r\n\r\n  const toggleAuthHandler = () => {\r\n    setIsLogin(!isLogin)\r\n    setIsLoading(false)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    {\r\n\r\n    }\r\n      !\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormAuth"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}