{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nassi\\\\Desktop\\\\reseau-social-auth\\\\src\\\\components\\\\Auth\\\\FormAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport ButtonSubmit from \"../UI/ButtonSubmit\";\nimport Form from 'react-bootstrap/Form';\nimport ErrorModalOverlay from './ErrorModalOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormAuth = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [dataLogin, setDataLogin] = useState({});\n  const emailInput = useRef(null);\n  const passwordInput = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const emailValue = emailInput.current.value;\n    const passwordValue = passwordInput.current.value;\n    if (emailValue.length === 0) {\n      setError('L\\'email est pas remplie');\n      setShow(true);\n    } else if (passwordValue.length === 0) {\n      setError('Le password est pas remplie');\n      setShow(true);\n    } else {\n      //Si les champs ne sont pas vide on va pouvoir se connecter et recupérer l'userID\n      const urlToLogin = \"http://localhost:3000/login\";\n\n      //Bien définir au niveau du serveur le middlewares cors\n      const checkToLogin = async () => {\n        const responseLogin = await fetch(urlToLogin, {\n          method: 'POST',\n          body: JSON.stringify({\n            login: emailValue,\n            password: passwordValue\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        return responseLogin;\n      };\n      console.log(checkToLogin);\n    }\n    const tokenLogin = dataLogin.token;\n    console.log(dataLogin);\n    console.log(tokenLogin);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [show && /*#__PURE__*/_jsxDEV(ErrorModalOverlay, {\n        value: error,\n        close: () => setShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-center justify-content-center border w-50 m-auto p-3 mt-5 rounded\",\n        style: {\n          boxShadow: \"5px 5px 10px black\",\n          background: \"firebrick\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-light\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"w-75\",\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"text-light\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: emailInput,\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"text-light\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: passwordInput,\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSubmit, {\n            color: \"success\",\n            children: \"Se connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n};\n_s(FormAuth, \"dKd8NEgUm02Hgb/XpywroOEIsaY=\");\n_c = FormAuth;\nexport default FormAuth;\nvar _c;\n$RefreshReg$(_c, \"FormAuth\");","map":{"version":3,"names":["React","useRef","useState","ButtonSubmit","Form","ErrorModalOverlay","jsxDEV","_jsxDEV","Fragment","_Fragment","FormAuth","_s","show","setShow","error","setError","dataLogin","setDataLogin","emailInput","passwordInput","handleSubmit","e","preventDefault","emailValue","current","value","passwordValue","length","urlToLogin","checkToLogin","responseLogin","fetch","method","body","JSON","stringify","login","password","headers","console","log","tokenLogin","token","children","close","fileName","_jsxFileName","lineNumber","columnNumber","className","style","boxShadow","background","onSubmit","Group","controlId","Label","Control","ref","type","placeholder","color","_c","$RefreshReg$"],"sources":["C:/Users/nassi/Desktop/reseau-social-auth/src/components/Auth/FormAuth.js"],"sourcesContent":["import React,{useRef, useState} from 'react'\r\nimport ButtonSubmit from \"../UI/ButtonSubmit\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport ErrorModalOverlay from './ErrorModalOverlay';\r\n\r\nconst FormAuth = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [dataLogin, setDataLogin] = useState({})\r\n\r\n  const emailInput = useRef(null);\r\n  const passwordInput = useRef(null);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const emailValue = emailInput.current.value;\r\n    const passwordValue = passwordInput.current.value;\r\n\r\n    if(emailValue.length === 0){\r\n      setError('L\\'email est pas remplie')\r\n      setShow(true)\r\n    }else if(passwordValue.length === 0){\r\n      setError('Le password est pas remplie')\r\n      setShow(true)\r\n    }else{\r\n      //Si les champs ne sont pas vide on va pouvoir se connecter et recupérer l'userID\r\n      const urlToLogin = \"http://localhost:3000/login\"\r\n\r\n      //Bien définir au niveau du serveur le middlewares cors\r\n      const checkToLogin = async() => {\r\n        const responseLogin = await fetch(urlToLogin, {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            login: emailValue,\r\n            password: passwordValue\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        return responseLogin;\r\n      }\r\n\r\n      console.log(checkToLogin)\r\n  }\r\n  \r\n  const tokenLogin = dataLogin.token\r\n  console.log(dataLogin)\r\n  console.log(tokenLogin)\r\n  return (\r\n    <>\r\n    {\r\n      show && <ErrorModalOverlay value={error} close={() => setShow(false)} />\r\n    }\r\n      <div className=\"d-flex flex-column align-items-center justify-content-center border w-50 m-auto p-3 mt-5 rounded\" style={{boxShadow:\"5px 5px 10px black\", background:\"firebrick\"}}>\r\n        <h1 className=\"text-light\">Se connecter</h1>\r\n\r\n        <Form className=\"w-75\" onSubmit={(e)=>handleSubmit(e)}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"text-light\">Email address</Form.Label>\r\n            <Form.Control ref={emailInput} type=\"email\" placeholder=\"Enter email\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"text-light\">Password</Form.Label>\r\n            <Form.Control ref={passwordInput} type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n\r\n          <ButtonSubmit color={\"success\"}>\r\n            Se connecter\r\n          </ButtonSubmit>\r\n        </Form>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n}\r\n\r\nexport default FormAuth"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}